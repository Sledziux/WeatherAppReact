[{"C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\index.js":"1","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\App.js":"2","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\City.js":"4","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\Menu.js":"5","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\Load.js":"6","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\NotFound.js":"7"},{"size":501,"mtime":1611616844200,"results":"8","hashOfConfig":"9"},{"size":705,"mtime":1612266130406,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4536,"mtime":1612273938082,"results":"12","hashOfConfig":"9"},{"size":526,"mtime":1612271424550,"results":"13","hashOfConfig":"9"},{"size":220,"mtime":1612273365808,"results":"14","hashOfConfig":"9"},{"size":457,"mtime":1612273760201,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dj2hq5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\index.js",[],["33","34"],"C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\App.js",["35","36"],"import React, { useState } from 'react';\n\nimport City from \"./City\"\nimport Menu from \"./Menu\"\nimport Load from \"./Load\"\n\nimport { api } from './City'\n\nlet city;\n\nfunction App() {\n\n  const [query, setQuery] = useState(\"\")\n  const [weather, setWeather] = useState({})\n  const [choice, setChoice] = useState(\"menu\")\n\n  switch(choice) {\n    case \"weather\":\n      return (\n        <City setWeather={setWeather} setQuery={setQuery} query={query} weather={weather} choice={setChoice}/>\n      );\n\n    case \"menu\": \n      return (\n        <Menu setChoice={setChoice}/>\n      ); \n\n    case \"load\":\n      return (\n        <Load setChoice={setChoice}/>\n      )\n\n    default:\n\n    break;\n  }\n\n \n}\n\nexport default App;\n","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\City.js",["37"],"import Clouds from './assets/clouds.png'\r\nimport Sun from './assets/sun.png'\r\nimport Rain from './assets/rain.png'\r\nimport Snowflake from './assets/snowflake.png'\r\nimport Storm from './assets/storm.png'\r\nimport WhiteClouds from './assets/white_clouds.png'\r\nimport SunWithClouds from './assets/sunWithClouds.png'\r\nimport Mist from './assets/mist.png'\r\n\r\nimport NotFound from './NotFound'\r\n\r\nexport const api = {\r\n    key: \"330a9748251922438f9eda23c3bb23b0\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nexport const data = [\r\n    {\r\n    id: 1,\r\n    en: \"Snow\",\r\n    pl: \"Śnieg\",\r\n    img: Snowflake,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(23,200,255,1) 0%, rgba(12,54,193,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 2,\r\n    en: \"Clouds\", \r\n    pl: \"Zachmurzone\",\r\n    img: Clouds,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(174,169,169) 0%, rgba(0,0,0,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 3,\r\n    en: \"broken clouds\",\r\n    pl: \"Załamanie pogody\",\r\n    img: Clouds,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(0,0,0,1) 0%, rgba(174,169,169,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 4,\r\n    en: \"Sun\",\r\n    pl: \"Słonecznie\",\r\n    img: Sun,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(214,193,0,1) 0%, rgba(213,42,36,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 5,\r\n    en: \"clear sky\",\r\n    pl: \"Bezchmurnie\",\r\n    img: Sun,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(214,193,0,1) 0%, rgba(213,42,36,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 6,\r\n    en: \"Rain\", \r\n    pl: \"Deszcz\",\r\n    img: Rain,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(34,139,167,1) 0%, rgba(30,29,32,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 7,\r\n    en: \"shower rain\",\r\n    pl: \"Deszcz\",\r\n    img: Rain,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(34,139,167,1) 0%, rgba(30,29,32,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 8,\r\n    en: \"Storm\",\r\n    pl: \"Burza\",\r\n    img: Storm,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(54,52,52,1) 0%, rgba(36,26,2,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 9,\r\n    en: \"scattered clouds\",\r\n    pl: \"Rozproszone chmury\",\r\n    img: WhiteClouds,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(155,198,189,1) 0%, rgba(181,215,228,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 10,\r\n    en: \"few clouds\",\r\n    pl: \"Kilka chmurek\",\r\n    img: SunWithClouds,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(173,0,214,1) 0%, rgba(174,25,20,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 11,\r\n    en: \"mist\",\r\n    pl: \"Mgła\",\r\n    img: Mist,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(187,186,186,1) 0%, rgba(114,112,112,1)100%)\"\r\n    },\r\n    },\r\n\r\n    {\r\n    id: 12,\r\n    en: \"Clear\",\r\n    pl: \"Bezchmurnie\",\r\n    img: Sun,\r\n    bgc: {\r\n        background: \"linear-gradient(120deg, rgba(214,193,0,1) 0%, rgba(213,42,36,1)100%)\"\r\n    },\r\n    },\r\n]\r\nconst City = ({setQuery, setWeather, weather, query, choice}) => {\r\n \r\n\r\n    const search = evt => {\r\n        if(evt.key === \"Enter\") {\r\n            choice(\"load\")\r\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWeather(data)\r\n            setQuery('')\r\n            choice(\"weather\")\r\n\r\n        })\r\n        }\r\n    }\r\n    \r\n    let today = []\r\n    let style = {}\r\n    if(typeof(weather.main) !== \"undefined\") {\r\n            today = data.filter(item => weather.weather[0].main === item.en)\r\n        if(today.length > 0) {\r\n            style = today[0].bgc\r\n        }\r\n    \r\n    } \r\n    \r\n    \r\n    \r\n    \r\n    return ( \r\n        \r\n        <main style={style}>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Miasto\"\r\n        value={query}\r\n        onChange={e => setQuery(e.target.value)}\r\n        onKeyPress={e => search(e)}\r\n       />\r\n    \r\n     {typeof(weather.main) !== \"undefined\" && today.length > 0 ? (\r\n\r\n       <div className=\"location\">\r\n         <div className=\"temp\"><p>{Math.round(weather.main.temp)}°C</p></div>\r\n         <div className=\"name\">{weather.name}, {weather.sys.country}</div>\r\n         <div className=\"image\"><img src={today[0].img} alt=\"sun\"/></div>\r\n         <div className=\"weather\">{\r\n\r\n          today[0].pl\r\n         }</div>\r\n       </div>\r\n     ) : null}\r\n\r\n     {weather.cod === \"404\" ? (<p className=\"error\" >Nie znaleziono miasta o takiej nazwie!</p>) : null}\r\n     </main>\r\n     );\r\n}\r\n \r\nexport default City;","C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\Menu.js",[],"C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\Load.js",[],"C:\\Users\\FxF\\Desktop\\cra\\weather-app\\src\\NotFound.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":10,"nodeType":"44","messageId":"45","endLine":7,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":9,"column":5,"nodeType":"44","messageId":"45","endLine":9,"endColumn":9},{"ruleId":"42","severity":1,"message":"47","line":10,"column":8,"nodeType":"44","messageId":"45","endLine":10,"endColumn":16},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'city' is defined but never used.","'NotFound' is defined but never used.","no-global-assign","no-unsafe-negation"]